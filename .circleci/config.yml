version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: felixholfelder/led-rest
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0.2
    steps:
      - checkout
      - run:
           name: Clean, Install
           command: ./mvnw clean install
      - run:
          name: Build Jar-File
          command: ./mvnw -Dmaven.test.skip=true package
      - store_artifacts:
          path: /home/circleci/project/target
      - persist_to_workspace:
          root: .
          paths:
            - .
  dockerize:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: ./
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Push to Docker-Hub
          command: |
            echo "$DOCKERHUB_PASS" |
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASS
            docker push $IMAGE_NAME:latest
      - store_artifacts:
          path: /home/circleci/project
      - persist_to_workspace:
          root: .
          paths:
            - .

  deploy:
    machine: true # # recommended linux image - includes Ubuntu 20.04,
    steps:
      - attach_workspace:
          at: ./
      - add_ssh_keys:
          fingerprints:
            - "dd:b4:76:45:0c:8c:b0:8d:64:df:e7:42:16:17:2d:82"
      - run:
          name: Add to known hosts
          command: ssh-keyscan -H $HOSTIP >> ~/.ssh/known_hosts
      - run:
          name: Setup
          command: chmod 755 /home/circleci/project/deploy.sh
      - run:
          name: Deploy
          command: |
            cd /home/circleci/project
            chmod 755 deploy.sh
            ./deploy.sh

workflows:
  version: 2
  build-pipeline:
    jobs:
      - build:
        filters:
          branches:
            only: master
      - dockerize:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - dockerize
          filters:
            branches:
              only: master